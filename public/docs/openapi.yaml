openapi: 3.0.3
info:
  title: 'Malingo api documentation'
  description: "This api documentation contains all the endpoints for the malingo project. \n    a platform where you can effortlessly find companions for your next adventure, be it a travel buddy,\n     a dining partner, or someone to join you for a stroll or a random conversation. Malingo is a solution\n      that enables individuals to connect, share experiences, and foster new relationships while splitting\n       costs or covering expenses as agreed.\n    "
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/activity:
    get:
      summary: 'Get all activities'
      operationId: getAllActivities
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  created_activities:
                    -
                      id: 1
                      user_id: 1
                      title: 'Hiking Adventure'
                      ActivityPhoto: null
                      description: 'A thrilling hike to the mountain peak.'
                      link: 'https://example.com/hiking-event'
                      numberOfMembers: 10
                      location: 'Mount Fako, Cameroon'
                      time: '2025-02-15 08:00:00'
                      created_at: '2025-02-04T08:19:02.000000Z'
                      updated_at: '2025-02-04T08:19:02.000000Z'
                    -
                      id: 2
                      user_id: 1
                      title: 'Hiking Adventure'
                      ActivityPhoto: null
                      description: 'A thrilling hike to the mountain peak.'
                      link: 'https://example.com/hiking-event'
                      numberOfMembers: 10
                      location: 'Mount Fako, Cameroon'
                      time: '2025-02-15 08:00:00'
                      created_at: '2025-02-04T08:25:56.000000Z'
                      updated_at: '2025-02-04T08:25:56.000000Z'
                    -
                      id: 3
                      user_id: 1
                      title: 'Hiking Adventure'
                      ActivityPhoto: null
                      description: 'A thrilling hike to the mountain peak.'
                      link: 'https://example.com/hiking-event'
                      numberOfMembers: 10
                      location: 'Mount Fako, Cameroon'
                      time: '2025-02-15 08:00:00'
                      created_at: '2025-02-04T08:36:04.000000Z'
                      updated_at: '2025-02-04T08:36:04.000000Z'
                    -
                      id: 4
                      user_id: 1
                      title: 'Hiking Adventure'
                      ActivityPhoto: activity_photos/rj6fjePPJweFYZf07s9dCtAjL84pKv12XGzWIW81.jpg
                      description: 'A thrilling hike to the mountain peak.'
                      link: 'https://example.com/hiking-event'
                      numberOfMembers: 10
                      location: 'Mount Fako, Cameroon'
                      time: '2025-02-15 08:00:00'
                      created_at: '2025-02-04T09:07:10.000000Z'
                      updated_at: '2025-02-04T09:07:10.000000Z'
                    -
                      id: 5
                      user_id: 1
                      title: 'Join me at Tech Chantier'
                      ActivityPhoto: activity_photos/2bAlnxzYIELlyfUW02fyNbLIobPMGzrUj8DLtchk.jpg
                      description: 'A thrilling hike to the mountain peak.'
                      link: 'https://example.com/hiking-event'
                      numberOfMembers: 10
                      location: 'Mount Fako, Cameroon'
                      time: '2025-02-15 08:00:00'
                      created_at: '2025-02-04T09:11:42.000000Z'
                      updated_at: '2025-02-04T09:11:42.000000Z'
                    -
                      id: 6
                      user_id: 1
                      title: 'Join me at Tech Chantier'
                      ActivityPhoto: activity_photos/OfdYJQsOrGOnYCKFtPDrhhv2Kp7PP5zZ40Q08Exk.jpg
                      description: 'A thrilling hike to the mountain peak.'
                      link: 'https://example.com/hiking-event'
                      numberOfMembers: 10
                      location: 'Mount Fako, Cameroon'
                      time: '2025-02-15 08:00:00'
                      created_at: '2025-02-04T09:13:20.000000Z'
                      updated_at: '2025-02-04T09:13:20.000000Z'
                    -
                      id: 7
                      user_id: 1
                      title: 'Join me at Tech Chantier'
                      ActivityPhoto: activity_photos/wvnmS2UuVkm1pfcNbhqcq6ouYonmj3G5Qd2KL69x.jpg
                      description: 'A thrilling hike to the mountain peak.'
                      link: 'https://example.com/hiking-event'
                      numberOfMembers: 40
                      location: 'Mount Fako, Cameroon'
                      time: '2025-02-15 08:00:00'
                      created_at: '2025-02-04T09:18:46.000000Z'
                      updated_at: '2025-02-04T09:18:46.000000Z'
                  pending_activities: []
                  accepted_activities: []
                  declined_activities: []
                properties:
                  created_activities:
                    type: array
                    example:
                      -
                        id: 1
                        user_id: 1
                        title: 'Hiking Adventure'
                        ActivityPhoto: null
                        description: 'A thrilling hike to the mountain peak.'
                        link: 'https://example.com/hiking-event'
                        numberOfMembers: 10
                        location: 'Mount Fako, Cameroon'
                        time: '2025-02-15 08:00:00'
                        created_at: '2025-02-04T08:19:02.000000Z'
                        updated_at: '2025-02-04T08:19:02.000000Z'
                      -
                        id: 2
                        user_id: 1
                        title: 'Hiking Adventure'
                        ActivityPhoto: null
                        description: 'A thrilling hike to the mountain peak.'
                        link: 'https://example.com/hiking-event'
                        numberOfMembers: 10
                        location: 'Mount Fako, Cameroon'
                        time: '2025-02-15 08:00:00'
                        created_at: '2025-02-04T08:25:56.000000Z'
                        updated_at: '2025-02-04T08:25:56.000000Z'
                      -
                        id: 3
                        user_id: 1
                        title: 'Hiking Adventure'
                        ActivityPhoto: null
                        description: 'A thrilling hike to the mountain peak.'
                        link: 'https://example.com/hiking-event'
                        numberOfMembers: 10
                        location: 'Mount Fako, Cameroon'
                        time: '2025-02-15 08:00:00'
                        created_at: '2025-02-04T08:36:04.000000Z'
                        updated_at: '2025-02-04T08:36:04.000000Z'
                      -
                        id: 4
                        user_id: 1
                        title: 'Hiking Adventure'
                        ActivityPhoto: activity_photos/rj6fjePPJweFYZf07s9dCtAjL84pKv12XGzWIW81.jpg
                        description: 'A thrilling hike to the mountain peak.'
                        link: 'https://example.com/hiking-event'
                        numberOfMembers: 10
                        location: 'Mount Fako, Cameroon'
                        time: '2025-02-15 08:00:00'
                        created_at: '2025-02-04T09:07:10.000000Z'
                        updated_at: '2025-02-04T09:07:10.000000Z'
                      -
                        id: 5
                        user_id: 1
                        title: 'Join me at Tech Chantier'
                        ActivityPhoto: activity_photos/2bAlnxzYIELlyfUW02fyNbLIobPMGzrUj8DLtchk.jpg
                        description: 'A thrilling hike to the mountain peak.'
                        link: 'https://example.com/hiking-event'
                        numberOfMembers: 10
                        location: 'Mount Fako, Cameroon'
                        time: '2025-02-15 08:00:00'
                        created_at: '2025-02-04T09:11:42.000000Z'
                        updated_at: '2025-02-04T09:11:42.000000Z'
                      -
                        id: 6
                        user_id: 1
                        title: 'Join me at Tech Chantier'
                        ActivityPhoto: activity_photos/OfdYJQsOrGOnYCKFtPDrhhv2Kp7PP5zZ40Q08Exk.jpg
                        description: 'A thrilling hike to the mountain peak.'
                        link: 'https://example.com/hiking-event'
                        numberOfMembers: 10
                        location: 'Mount Fako, Cameroon'
                        time: '2025-02-15 08:00:00'
                        created_at: '2025-02-04T09:13:20.000000Z'
                        updated_at: '2025-02-04T09:13:20.000000Z'
                      -
                        id: 7
                        user_id: 1
                        title: 'Join me at Tech Chantier'
                        ActivityPhoto: activity_photos/wvnmS2UuVkm1pfcNbhqcq6ouYonmj3G5Qd2KL69x.jpg
                        description: 'A thrilling hike to the mountain peak.'
                        link: 'https://example.com/hiking-event'
                        numberOfMembers: 40
                        location: 'Mount Fako, Cameroon'
                        time: '2025-02-15 08:00:00'
                        created_at: '2025-02-04T09:18:46.000000Z'
                        updated_at: '2025-02-04T09:18:46.000000Z'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        user_id:
                          type: integer
                          example: 1
                        title:
                          type: string
                          example: 'Hiking Adventure'
                        ActivityPhoto:
                          type: string
                          example: null
                        description:
                          type: string
                          example: 'A thrilling hike to the mountain peak.'
                        link:
                          type: string
                          example: 'https://example.com/hiking-event'
                        numberOfMembers:
                          type: integer
                          example: 10
                        location:
                          type: string
                          example: 'Mount Fako, Cameroon'
                        time:
                          type: string
                          example: '2025-02-15 08:00:00'
                        created_at:
                          type: string
                          example: '2025-02-04T08:19:02.000000Z'
                        updated_at:
                          type: string
                          example: '2025-02-04T08:19:02.000000Z'
                  pending_activities:
                    type: array
                    example: []
                  accepted_activities:
                    type: array
                    example: []
                  declined_activities:
                    type: array
                    example: []
      tags:
        - Activities
    post:
      summary: 'Create a new activity'
      operationId: createANewActivity
      description: ''
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  title: 'Join me at Tech Chantier'
                  ActivityPhoto: activity_photos/wvnmS2UuVkm1pfcNbhqcq6ouYonmj3G5Qd2KL69x.jpg
                  description: 'A thrilling hike to the mountain peak.'
                  link: 'https://example.com/hiking-event'
                  numberOfMembers: '40'
                  location: 'Mount Fako, Cameroon'
                  time: '2025-02-15 08:00:00'
                  user_id: 1
                  updated_at: '2025-02-04T09:18:46.000000Z'
                  created_at: '2025-02-04T09:18:46.000000Z'
                  id: 7
                properties:
                  title:
                    type: string
                    example: 'Join me at Tech Chantier'
                  ActivityPhoto:
                    type: string
                    example: activity_photos/wvnmS2UuVkm1pfcNbhqcq6ouYonmj3G5Qd2KL69x.jpg
                  description:
                    type: string
                    example: 'A thrilling hike to the mountain peak.'
                  link:
                    type: string
                    example: 'https://example.com/hiking-event'
                  numberOfMembers:
                    type: string
                    example: '40'
                  location:
                    type: string
                    example: 'Mount Fako, Cameroon'
                  time:
                    type: string
                    example: '2025-02-15 08:00:00'
                  user_id:
                    type: integer
                    example: 1
                  updated_at:
                    type: string
                    example: '2025-02-04T09:18:46.000000Z'
                  created_at:
                    type: string
                    example: '2025-02-04T09:18:46.000000Z'
                  id:
                    type: integer
                    example: 7
      tags:
        - Activities
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'required: The title of the activity.'
                  example: 'Morning Run'
                  nullable: false
                ActivityPhoto:
                  type: 'file:'
                  description: 'The photo of the activity. type: [png, jpeg]'
                  example: accusamus
                  nullable: false
                description:
                  type: string
                  description: 'required:  The description of the activity.'
                  example: 'A group run in the park.'
                  nullable: false
                link:
                  type: string
                  description: 'required: The link to the activity (if any).'
                  example: 'https://zoom.com/meeting'
                  nullable: false
                numberOfMembers:
                  type: integer
                  description: 'the number of member to the activity is required'
                  example: 6
                  nullable: false
                location:
                  type: string
                  description: 'required: The location of the activity.'
                  example: 'Central Park'
                  nullable: false
                time:
                  type: datetime
                  description: 'required: The date and time of the activity. Format: Y-m-d H:i:s.'
                  example: '2025-01-01 10:00:00'
                  nullable: false
              required:
                - ActivityPhoto
  '/api/activity/{id}':
    get:
      summary: "Get activity details\n\nRetrieve details of a specific activity."
      operationId: getActivityDetailsRetrieveDetailsOfASpecificActivity
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 5
                  user_id: 1
                  title: 'Join me at Tech Chantier'
                  ActivityPhoto: activity_photos/2bAlnxzYIELlyfUW02fyNbLIobPMGzrUj8DLtchk.jpg
                  description: 'A thrilling hike to the mountain peak.'
                  link: 'https://example.com/hiking-event'
                  numberOfMembers: 10
                  location: 'Mount Fako, Cameroon'
                  time: '2025-02-15 08:00:00'
                  created_at: '2025-02-04T09:11:42.000000Z'
                  updated_at: '2025-02-04T09:11:42.000000Z'
                properties:
                  id:
                    type: integer
                    example: 5
                  user_id:
                    type: integer
                    example: 1
                  title:
                    type: string
                    example: 'Join me at Tech Chantier'
                  ActivityPhoto:
                    type: string
                    example: activity_photos/2bAlnxzYIELlyfUW02fyNbLIobPMGzrUj8DLtchk.jpg
                  description:
                    type: string
                    example: 'A thrilling hike to the mountain peak.'
                  link:
                    type: string
                    example: 'https://example.com/hiking-event'
                  numberOfMembers:
                    type: integer
                    example: 10
                  location:
                    type: string
                    example: 'Mount Fako, Cameroon'
                  time:
                    type: string
                    example: '2025-02-15 08:00:00'
                  created_at:
                    type: string
                    example: '2025-02-04T09:11:42.000000Z'
                  updated_at:
                    type: string
                    example: '2025-02-04T09:11:42.000000Z'
      tags:
        - Activities
      security: []
    put:
      summary: "Update an activity\n\nUpdate the details of an existing activity."
      operationId: updateAnActivityUpdateTheDetailsOfAnExistingActivity
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  title: 'Evening Walk'
                  description: 'A peaceful evening walk.'
                  location: 'Riverside Park'
                  time: '2025-01-02 18:00:00'
                properties:
                  id:
                    type: integer
                    example: 1
                  title:
                    type: string
                    example: 'Evening Walk'
                  description:
                    type: string
                    example: 'A peaceful evening walk.'
                  location:
                    type: string
                    example: 'Riverside Park'
                  time:
                    type: string
                    example: '2025-01-02 18:00:00'
      tags:
        - Activities
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'The updated title of the activity.'
                  example: 'Evening Walk'
                  nullable: false
                description:
                  type: string
                  description: 'The updated description.'
                  example: 'A peaceful evening walk.'
                  nullable: false
                location:
                  type: string
                  description: 'The updated location.'
                  example: 'Riverside Park'
                  nullable: false
                time:
                  type: datetime
                  description: 'The updated date and time. Format: Y-m-d H:i:s.'
                  example: '2025-01-02 18:00:00'
                  nullable: false
              required:
                - title
                - description
                - location
                - time
      security: []
    delete:
      summary: "Delete an activity\n\nDelete an activity created by the authenticated user."
      operationId: deleteAnActivityDeleteAnActivityCreatedByTheAuthenticatedUser
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Activity deleted successfully'
                properties:
                  message:
                    type: string
                    example: 'Activity deleted successfully'
      tags:
        - Activities
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the activity.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: activity
        description: 'The ID of the activity.'
        example: 1
        required: true
        schema:
          type: integer
  /api/register:
    post:
      summary: 'Register a new user'
      operationId: registerANewUser
      description: 'Create a new user account and generate an authentication token.'
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  user:
                    name: 'Nkuma Confident'
                    email: nsem@gmail.com
                    updated_at: '2025-02-04T08:18:33.000000Z'
                    created_at: '2025-02-04T08:18:33.000000Z'
                    id: 1
                  token: 1|zoNArNwtRQijtSUA8qLUAFctGhOI1W1OUnVRm0GZcc1b2217
                properties:
                  user:
                    type: object
                    properties:
                      name:
                        type: string
                        example: 'Nkuma Confident'
                      email:
                        type: string
                        example: nsem@gmail.com
                      updated_at:
                        type: string
                        example: '2025-02-04T08:18:33.000000Z'
                      created_at:
                        type: string
                        example: '2025-02-04T08:18:33.000000Z'
                      id:
                        type: integer
                        example: 1
                  token:
                    type: string
                    example: 1|zoNArNwtRQijtSUA8qLUAFctGhOI1W1OUnVRm0GZcc1b2217
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The email has already been taken. (and 1 more error)'
                  errors:
                    email:
                      - 'The email has already been taken.'
                    password:
                      - 'The password field confirmation does not match.'
                properties:
                  message:
                    type: string
                    example: 'The email has already been taken. (and 1 more error)'
                  errors:
                    type: object
                    properties:
                      email:
                        type: array
                        example:
                          - 'The email has already been taken.'
                        items:
                          type: string
                      password:
                        type: array
                        example:
                          - 'The password field confirmation does not match.'
                        items:
                          type: string
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: "The user's full name."
                  example: 'John Doe'
                  nullable: false
                email:
                  type: string
                  description: "The user's email address."
                  example: john@example.com
                  nullable: false
                password:
                  type: string
                  description: "The user's password (minimum 6 characters)."
                  example: secretpassword
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The confirmation of the password.'
                  example: secretpassword
                  nullable: false
              required:
                - name
                - email
                - password
                - password_confirmation
      security: []
  /api/login:
    post:
      summary: 'Log in an existing user'
      operationId: logInAnExistingUser
      description: 'Authenticate a user using email and password, and generate an authentication token.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  user:
                    id: 1
                    name: 'John Doe'
                    email: john@example.com
                    created_at: '2025-01-21T10:00:00'
                    updated_at: '2025-01-21T10:00:00'
                  token: 1|laravel_sanctum_token_string_here
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'John Doe'
                      email:
                        type: string
                        example: john@example.com
                      created_at:
                        type: string
                        example: '2025-01-21T10:00:00'
                      updated_at:
                        type: string
                        example: '2025-01-21T10:00:00'
                  token:
                    type: string
                    example: 1|laravel_sanctum_token_string_here
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Invalid credentials'
                properties:
                  message:
                    type: string
                    example: 'Invalid credentials'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The given data was invalid.'
                  errors:
                    email:
                      - 'The selected email is invalid.'
                properties:
                  message:
                    type: string
                    example: 'The given data was invalid.'
                  errors:
                    type: object
                    properties:
                      email:
                        type: array
                        example:
                          - 'The selected email is invalid.'
                        items:
                          type: string
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: "The user's email address."
                  example: john@example.com
                  nullable: false
                password:
                  type: string
                  description: "The user's password."
                  example: secretpassword
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/logout:
    post:
      summary: 'Log out the current user'
      operationId: logOutTheCurrentUser
      description: "Revoke all of the user's tokens to log them out."
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully logged out'
                properties:
                  message:
                    type: string
                    example: 'Successfully logged out'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated
                properties:
                  message:
                    type: string
                    example: Unauthenticated
      tags:
        - Authentication
  '/api/users/{id}':
    get:
      summary: 'Show user details by ID'
      operationId: showUserDetailsByID
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  name: 'John Doe'
                  email: john@example.com
                  created_at: '2021-01-01T00:00:00Z'
                  updated_at: '2021-01-01T00:00:00Z'
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: 'John Doe'
                  email:
                    type: string
                    example: john@example.com
                  created_at:
                    type: string
                    example: '2021-01-01T00:00:00Z'
                  updated_at:
                    type: string
                    example: '2021-01-01T00:00:00Z'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'User not found'
                properties:
                  message:
                    type: string
                    example: 'User not found'
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/activities/{activity_id}/join':
    post:
      summary: 'Join an activity'
      operationId: joinAnActivity
      description: ''
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Join request sent successfully.'
                  join_request:
                    id: 1
                    user_id: 1
                    activity_id: 2
                    status: pending
                properties:
                  message:
                    type: string
                    example: 'Join request sent successfully.'
                  join_request:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      user_id:
                        type: integer
                        example: 1
                      activity_id:
                        type: integer
                        example: 2
                      status:
                        type: string
                        example: pending
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You have already requested to join this activity.'
                properties:
                  message:
                    type: string
                    example: 'You have already requested to join this activity.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                activity_id:
                  type: integer
                  description: 'The ID of the activity to join.'
                  example: 9
                  nullable: false
              required:
                - activity_id
    parameters:
      -
        in: path
        name: activity_id
        description: 'The ID of the activity.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/join-request/{joinRequest_id}/accept':
    post:
      summary: 'Accept a join request'
      operationId: acceptAJoinRequest
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Join request accepted'
                  whatsapp_link: 'https://wa.me/1234567890'
                properties:
                  message:
                    type: string
                    example: 'Join request accepted'
                  whatsapp_link:
                    type: string
                    example: 'https://wa.me/1234567890'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                joinRequest_id:
                  type: integer
                  description: 'The ID of the join request to accept.'
                  example: 1
                  nullable: false
              required:
                - joinRequest_id
    parameters:
      -
        in: path
        name: joinRequest_id
        description: 'The ID of the joinRequest.'
        example: 8
        required: true
        schema:
          type: integer
  '/api/join-request/{joinRequest_id}/decline':
    post:
      summary: 'Decline a join request'
      operationId: declineAJoinRequest
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Your request to join this activity has been declined'
                properties:
                  message:
                    type: string
                    example: 'Your request to join this activity has been declined'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                joinRequest_id:
                  type: integer
                  description: 'The ID of the join request to decline.'
                  example: 1
                  nullable: false
              required:
                - joinRequest_id
    parameters:
      -
        in: path
        name: joinRequest_id
        description: 'The ID of the joinRequest.'
        example: 20
        required: true
        schema:
          type: integer
  /api/activities/user:
    get:
      summary: 'Get user activities'
      operationId: getUserActivities
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  created_activities:
                    -
                      id: 1
                      title: 'Activity 1'
                      time: '2025-01-21T10:00:00'
                      location: 'Location 1'
                  pending_activities:
                    -
                      id: 2
                      title: 'Activity 2'
                      status: pending
                  accepted_activities:
                    -
                      id: 3
                      title: 'Activity 3'
                      status: accepted
                  declined_activities:
                    -
                      id: 4
                      title: 'Activity 4'
                      status: declined
                properties:
                  created_activities:
                    type: array
                    example:
                      -
                        id: 1
                        title: 'Activity 1'
                        time: '2025-01-21T10:00:00'
                        location: 'Location 1'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        title:
                          type: string
                          example: 'Activity 1'
                        time:
                          type: string
                          example: '2025-01-21T10:00:00'
                        location:
                          type: string
                          example: 'Location 1'
                  pending_activities:
                    type: array
                    example:
                      -
                        id: 2
                        title: 'Activity 2'
                        status: pending
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 2
                        title:
                          type: string
                          example: 'Activity 2'
                        status:
                          type: string
                          example: pending
                  accepted_activities:
                    type: array
                    example:
                      -
                        id: 3
                        title: 'Activity 3'
                        status: accepted
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 3
                        title:
                          type: string
                          example: 'Activity 3'
                        status:
                          type: string
                          example: accepted
                  declined_activities:
                    type: array
                    example:
                      -
                        id: 4
                        title: 'Activity 4'
                        status: declined
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 4
                        title:
                          type: string
                          example: 'Activity 4'
                        status:
                          type: string
                          example: declined
      tags:
        - Endpoints
  /api/activities/filter:
    get:
      summary: 'Filter activities by title, description, date, and location'
      operationId: filterActivitiesByTitleDescriptionDateAndLocation
      description: 'Retrieve activities based on specified filters.'
      parameters:
        -
          in: query
          name: title
          description: 'optional Filter by title.'
          example: sed
          required: false
          schema:
            type: string
            description: 'optional Filter by title.'
            example: sed
            nullable: false
        -
          in: query
          name: description
          description: 'optional Filter by description.'
          example: 'Est unde atque eum aut aspernatur.'
          required: false
          schema:
            type: string
            description: 'optional Filter by description.'
            example: 'Est unde atque eum aut aspernatur.'
            nullable: false
        -
          in: query
          name: date
          description: 'optional Filter by date (format: y-m-d).'
          example: rerum
          required: false
          schema:
            type: string
            description: 'optional Filter by date (format: y-m-d).'
            example: rerum
            nullable: false
        -
          in: query
          name: location
          description: 'optional Filter by location.'
          example: sunt
          required: false
          schema:
            type: string
            description: 'optional Filter by location.'
            example: sunt
            nullable: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 1
                    title: 'Filtered Activity'
                    description: 'Activity description'
                    time: '2025-01-21T10:00:00'
                    location: 'Location 1'
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Invalid date format, please use a valid date'
                properties:
                  message:
                    type: string
                    example: 'Invalid date format, please use a valid date'
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: voluptatum
                  nullable: true
                description:
                  type: string
                  description: ''
                  example: 'Eius rerum dolorum tempore minima ut magni.'
                  nullable: true
                date:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                location:
                  type: string
                  description: ''
                  example: necessitatibus
                  nullable: true
      security: []
  /api/activities/search:
    get:
      summary: 'Search activities by title, description, location, or date'
      operationId: searchActivitiesByTitleDescriptionLocationOrDate
      description: 'Search for activities based on the provided parameters.'
      parameters:
        -
          in: query
          name: title
          description: 'optional Filter by title.'
          example: perspiciatis
          required: false
          schema:
            type: string
            description: 'optional Filter by title.'
            example: perspiciatis
            nullable: false
        -
          in: query
          name: description
          description: 'optional Filter by description.'
          example: 'Ducimus et eum necessitatibus aut quis eveniet.'
          required: false
          schema:
            type: string
            description: 'optional Filter by description.'
            example: 'Ducimus et eum necessitatibus aut quis eveniet.'
            nullable: false
        -
          in: query
          name: location
          description: 'optional Filter by location.'
          example: placeat
          required: false
          schema:
            type: string
            description: 'optional Filter by location.'
            example: placeat
            nullable: false
        -
          in: query
          name: date
          description: 'optional Filter by date (format: y-m-d).'
          example: quaerat
          required: false
          schema:
            type: string
            description: 'optional Filter by date (format: y-m-d).'
            example: quaerat
            nullable: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 1
                    title: 'Activity 1'
                    time: '2025-01-21T10:00:00'
                    location: 'Location 1'
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: voluptatem
                  nullable: true
                description:
                  type: string
                  description: ''
                  example: 'Facilis iure velit expedita et quia aperiam nesciunt dolor.'
                  nullable: true
                location:
                  type: string
                  description: ''
                  example: animi
                  nullable: true
                date:
                  type: string
                  description: ''
                  example: null
                  nullable: true
      security: []
  '/api/activities/{id}/joined-users':
    get:
      summary: 'Get users who joined a specific activity'
      operationId: getUsersWhoJoinedASpecificActivity
      description: 'Retrieve a list of users who have joined a particular activity.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 1
                    name: 'User 1'
                    email: user1@example.com
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Activity not found'
                properties:
                  message:
                    type: string
                    example: 'Activity not found'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the activity.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: activityId
        description: 'The ID of the activity.'
        example: 18
        required: true
        schema:
          type: integer
  '/api/activity/{activity_id}/leave':
    post:
      summary: 'Request leave from an activity'
      operationId: requestLeaveFromAnActivity
      description: ''
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Leave request sent successfully'
                  leaveRequest:
                    id: 1
                    user_id: 1
                    activity_id: 2
                    status: pending
                properties:
                  message:
                    type: string
                    example: 'Leave request sent successfully'
                  leaveRequest:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      user_id:
                        type: integer
                        example: 1
                      activity_id:
                        type: integer
                        example: 2
                      status:
                        type: string
                        example: pending
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You are not a participant in this activity'
                properties:
                  message:
                    type: string
                    example: 'You are not a participant in this activity'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                activity_id:
                  type: integer
                  description: 'The ID of the activity.'
                  example: 18
                  nullable: false
              required:
                - activity_id
    parameters:
      -
        in: path
        name: activity_id
        description: 'The ID of the activity.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/leave-requests/{leaveRequest_id}/approve':
    post:
      summary: 'Approve a leave request'
      operationId: approveALeaveRequest
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The leave request has been approved'
                properties:
                  message:
                    type: string
                    example: 'The leave request has been approved'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You are not authorized to approve this request'
                properties:
                  message:
                    type: string
                    example: 'You are not authorized to approve this request'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                leaveRequest_id:
                  type: integer
                  description: 'The ID of the leave request to approve.'
                  example: 1
                  nullable: false
              required:
                - leaveRequest_id
    parameters:
      -
        in: path
        name: leaveRequest_id
        description: 'The ID of the leaveRequest.'
        example: 19
        required: true
        schema:
          type: integer
  /api/user:
    get:
      summary: ''
      operationId: getApiUser
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
tags:
  -
    name: Activities
    description: ''
  -
    name: Authentication
    description: "\nEndpoints for user registration, login, and logout."
  -
    name: Endpoints
    description: ''
