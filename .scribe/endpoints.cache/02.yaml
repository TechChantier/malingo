## Autogenerated by Scribe. DO NOT MODIFY.

name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/users/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show user details by ID'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'string required The authentication token. Example: Bearer {token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "name": "John Doe",
            "email": "john@example.com",
            "created_at": "2021-01-01T00:00:00Z",
            "updated_at": "2021-01-01T00:00:00Z"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "User not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/activities/{activity_id}/join'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Join an activity'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'string required The authentication token. Example: Bearer {token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      activity_id:
        name: activity_id
        description: 'The ID of the activity.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      activity_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      activity_id:
        name: activity_id
        description: 'The ID of the activity to join.'
        required: true
        example: 9
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      activity_id: 9
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "message": "Join request sent successfully.",
            "join_request": {
              "id": 1,
              "user_id": 1,
              "activity_id": 2,
              "status": "pending"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "message": "You have already requested to join this activity."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/join-request/{joinRequest_id}/accept'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Accept a join request'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'string required The authentication token. Example: Bearer {token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      joinRequest_id:
        name: joinRequest_id
        description: 'The ID of the joinRequest.'
        required: true
        example: 8
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      joinRequest_id: 8
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      joinRequest_id:
        name: joinRequest_id
        description: 'The ID of the join request to accept.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      joinRequest_id: 1
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Join request accepted",
            "whatsapp_link": "https://wa.me/1234567890"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
            "message": "Unauthorized"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/join-request/{joinRequest_id}/decline'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Decline a join request'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'string required The authentication token. Example: Bearer {token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      joinRequest_id:
        name: joinRequest_id
        description: 'The ID of the joinRequest.'
        required: true
        example: 20
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      joinRequest_id: 20
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      joinRequest_id:
        name: joinRequest_id
        description: 'The ID of the join request to decline.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      joinRequest_id: 1
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Your request to join this activity has been declined"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
            "message": "Unauthorized"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/activities/user
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get user activities'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'string required The authentication token. Example: Bearer {token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "created_activities": [
              {
                "id": 1,
                "title": "Activity 1",
                "time": "2025-01-21T10:00:00",
                "location": "Location 1"
              }
            ],
            "pending_activities": [
              {
                "id": 2,
                "title": "Activity 2",
                "status": "pending"
              }
            ],
            "accepted_activities": [
              {
                "id": 3,
                "title": "Activity 3",
                "status": "accepted"
              }
            ],
            "declined_activities": [
              {
                "id": 4,
                "title": "Activity 4",
                "status": "declined"
              }
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/activities/filter
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Filter activities by title, description, date, and location'
      description: 'Retrieve activities based on specified filters.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      title:
        name: title
        description: 'optional Filter by title.'
        required: false
        example: sed
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'optional Filter by description.'
        required: false
        example: 'Est unde atque eum aut aspernatur.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      date:
        name: date
        description: 'optional Filter by date (format: y-m-d).'
        required: false
        example: rerum
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      location:
        name: location
        description: 'optional Filter by location.'
        required: false
        example: sunt
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      title: sed
      description: 'Est unde atque eum aut aspernatur.'
      date: rerum
      location: sunt
    bodyParameters:
      title:
        name: title
        description: ''
        required: false
        example: voluptatum
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Eius rerum dolorum tempore minima ut magni.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      date:
        name: date
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      location:
        name: location
        description: ''
        required: false
        example: necessitatibus
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      title: voluptatum
      description: 'Eius rerum dolorum tempore minima ut magni.'
      location: necessitatibus
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          [
            {
              "id": 1,
              "title": "Filtered Activity",
              "description": "Activity description",
              "time": "2025-01-21T10:00:00",
              "location": "Location 1"
            }
          ]
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "message": "Invalid date format, please use a valid date"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/activities/search
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Search activities by title, description, location, or date'
      description: 'Search for activities based on the provided parameters.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      title:
        name: title
        description: 'optional Filter by title.'
        required: false
        example: perspiciatis
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'optional Filter by description.'
        required: false
        example: 'Ducimus et eum necessitatibus aut quis eveniet.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      location:
        name: location
        description: 'optional Filter by location.'
        required: false
        example: placeat
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      date:
        name: date
        description: 'optional Filter by date (format: y-m-d).'
        required: false
        example: quaerat
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      title: perspiciatis
      description: 'Ducimus et eum necessitatibus aut quis eveniet.'
      location: placeat
      date: quaerat
    bodyParameters:
      title:
        name: title
        description: ''
        required: false
        example: voluptatem
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Facilis iure velit expedita et quia aperiam nesciunt dolor.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      location:
        name: location
        description: ''
        required: false
        example: animi
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      date:
        name: date
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      title: voluptatem
      description: 'Facilis iure velit expedita et quia aperiam nesciunt dolor.'
      location: animi
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          [
            {
              "id": 1,
              "title": "Activity 1",
              "time": "2025-01-21T10:00:00",
              "location": "Location 1"
            }
          ]
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/activities/{id}/joined-users'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get users who joined a specific activity'
      description: 'Retrieve a list of users who have joined a particular activity.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the activity.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      activityId:
        name: activityId
        description: 'The ID of the activity.'
        required: true
        example: 18
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
      activityId: 18
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          [
            {
              "id": 1,
              "name": "User 1",
              "email": "user1@example.com"
            }
          ]
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Activity not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/activity/{activity_id}/leave'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Request leave from an activity'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'string required The authentication token. Example: Bearer {token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      activity_id:
        name: activity_id
        description: 'The ID of the activity.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      activity_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      activity_id:
        name: activity_id
        description: 'The ID of the activity.'
        required: true
        example: 18
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      activity_id: 18
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "message": "Leave request sent successfully",
            "leaveRequest": {
              "id": 1,
              "user_id": 1,
              "activity_id": 2,
              "status": "pending"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
            "message": "You are not a participant in this activity"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/leave-requests/{leaveRequest_id}/approve'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Approve a leave request'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'string required The authentication token. Example: Bearer {token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      leaveRequest_id:
        name: leaveRequest_id
        description: 'The ID of the leaveRequest.'
        required: true
        example: 19
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      leaveRequest_id: 19
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      leaveRequest_id:
        name: leaveRequest_id
        description: 'The ID of the leave request to approve.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      leaveRequest_id: 1
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "The leave request has been approved"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
            "message": "You are not authorized to approve this request"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/user
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
