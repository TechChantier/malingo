name: Authentication
description: |-

  Endpoints for user registration, login, and logout.
endpoints:
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      groupName: Authentication
      groupDescription: |-

        Endpoints for user registration, login, and logout.
      subgroup: ''
      subgroupDescription: ''
      title: 'Register a new user'
      description: 'Create a new user account and generate an authentication token.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: "The user's full name."
        required: true
        example: 'John Doe'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: "The user's email address."
        required: true
        example: john@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: "The user's password (minimum 6 characters)."
        required: true
        example: secretpassword
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'The confirmation of the password.'
        required: true
        example: secretpassword
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'John Doe'
      email: john@example.com
      password: secretpassword
      password_confirmation: secretpassword
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
          "user": {
            "name": "Nkuma Confident",
            "email": "nsem@gmail.com",
            "updated_at": "2025-02-04T08:18:33.000000Z",
            "created_at": "2025-02-04T08:18:33.000000Z",
            "id": 1
          },
          "token": "1|zoNArNwtRQijtSUA8qLUAFctGhOI1W1OUnVRm0GZcc1b2217"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
          "message": "The email has already been taken. (and 1 more error)",
          "errors": {
            "email": [
                "The email has already been taken."
             ],
            "password": [
                "The password field confirmation does not match."
            ]
          }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      groupName: Authentication
      groupDescription: |-

        Endpoints for user registration, login, and logout.
      subgroup: ''
      subgroupDescription: ''
      title: 'Log in an existing user'
      description: 'Authenticate a user using email and password, and generate an authentication token.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: "The user's email address."
        required: true
        example: john@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: "The user's password."
        required: true
        example: secretpassword
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      email: john@example.com
      password: secretpassword
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "user": {
              "id": 1,
              "name": "John Doe",
              "email": "john@example.com",
              "created_at": "2025-01-21T10:00:00",
              "updated_at": "2025-01-21T10:00:00"
            },
            "token": "1|laravel_sanctum_token_string_here"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "message": "Invalid credentials"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "The given data was invalid.",
            "errors": {
              "email": ["The selected email is invalid."]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/logout
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Log out the current user

        Revoke all of the user's tokens to log them out.
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Successfully logged out"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "message": "Unauthenticated"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
